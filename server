const CACHE_NAME = 'an-enterprises-v1';
const urlsToCache = [
    '/',
    '/index.html',
    '/kitchen.html',
    '/decor.html',
    '/about.html',
    '/contact.html',
    '/styles.css',
    '/app.js',
    '/products.js',
    '/manifest.json',
    'https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;600;700&family=Inter:wght@300;400;500;600&display=swap'
];

// Install event
self.addEventListener('install', event => {
    event.waitUntil(
        caches.open(CACHE_NAME)
            .then(cache => {
                console.log('Opened cache');
                return cache.addAll(urlsToCache);
            })
    );
});

// Fetch event
self.addEventListener('fetch', event => {
    event.respondWith(
        caches.match(event.request)
            .then(response => {
                // Return cached version or fetch from network
                if (response) {
                    return response;
                }
                return fetch(event.request);
            })
    );
});

// Activate event
self.addEventListener('activate', event => {
    event.waitUntil(
        caches.keys().then(cacheNames => {
            return Promise.all(
                cacheNames.map(cacheName => {
                    if (cacheName !== CACHE_NAME) {
                        console.log('Deleting old cache:', cacheName);
                        return caches.delete(cacheName);
                    }
                })
            );
        })
    );
});

// Background sync for cart data
self.addEventListener('sync', event => {
    if (event.tag === 'cart-sync') {
        event.waitUntil(syncCartData());
    }
});

// Push notifications
self.addEventListener('push', event => {
    const options = {
        body: event.data ? event.data.text() : 'New update from AN Enterprises!',
        icon: '/assets/logo.jpeg',
        badge: '/assets/logo.jpeg',
        vibrate: [200, 100, 200],
        data: {
            dateOfArrival: Date.now(),
            primaryKey: 1
        },
        actions: [
            {
                action: 'explore',
                title: 'View Products',
                icon: '/assets/logo.jpeg'
            },
            {
                action: 'close',
                title: 'Close',
                icon: '/assets/logo.jpeg'
            }
        ]
    };

    event.waitUntil(
        self.registration.showNotification('AN Enterprises', options)
    );
});

// Notification click handler
self.addEventListener('notificationclick', event => {
    event.notification.close();

    if (event.action === 'explore') {
        event.waitUntil(
            clients.openWindow('/')
        );
    }
});

// Sync cart data function
async function syncCartData() {
    try {
        // This would typically sync cart data with a server
        // For now, we'll just log the action
        console.log('Syncing cart data...');
        
        // Get cart data from IndexedDB or localStorage
        const cartData = localStorage.getItem('cart');
        if (cartData) {
            console.log('Cart data found:', cartData);
            // Here you would send the data to your server
        }
    } catch (error) {
        console.error('Cart sync failed:', error);
    }
}